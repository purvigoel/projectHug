Main Design Decisions:This project involved calculating ray directions and intersections through coordinate spaces onto implicit shapes. The most important design decision I made was where to keep the code determining if a ray intersected with an implicit shape. I decided rather than keep these in the Shape classes, to make other classes like ImplicitCone, ImplicitCube, et cetera. When creating the RayScene, I iterated through all the shapes in the scene and created Implicit representations of them. I decided to do this because in my opinion, a Cube is different from an ImplicitCube; both represent different forms of the object, and should therefore be separate. When the render button is clicked, I used a copy constructor to copy information from the SceneviewScene into the ray scene. Because so much computation and data storing was done in SceneviewScene.cpp, I decided that it didn’t make sense to do it all over again in RayScene.cpp, and just copied the information over into data structures that the RayScene could use.I broke up the majority of my code into several helper functions that took in changeable parameters. For instance, I had the eye location for ray generation passed in as a parameter. This should help me on Ray, because I can reuse the helper function, just with a different eye coordinate to be the origin of the ray.The “Is it a Bug or is it a Feature” section:I decided to make the background black by default. When playing with the demo, it looked like even if the 3D scene had a gray background, the raytraced version had a black background. I looked at several of the xml scenegraphs, and couldn’t find any information defining what the color the background should be. So, if the light ray couldn’t intersect with an object, I made the pixel it shot through the color black, (0,0,0).Converting ShapesScene scenes to RayScenes only work if we consider the light to be a point light. ShapesScene uses a directional light, which I have not implemented in Intersect.Known Bugs:I ran the valgrind memory analyzer and it looks like the issues are all external functions.